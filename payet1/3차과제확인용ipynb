{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOXAsTpRJBZuY6R2MF7XbbE"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["lang1 = [\"C\", \"C++\", \"JAVA\"]\n","lang2 = [\"Python\", \"Go\", \"C#\"]\n","\n","lang_collection = lang1 + lang2\n","\n","print(\"언어들\")\n","print(lang_collection)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IRN6LpUqi96_","executionInfo":{"status":"ok","timestamp":1756097163141,"user_tz":-540,"elapsed":4,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"ae1d9f0b-1139-4e7f-de3b-b6b26b30c5da"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["언어들\n","['C', 'C++', 'JAVA', 'Python', 'Go', 'C#']\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8d52c72d","executionInfo":{"status":"ok","timestamp":1756097424140,"user_tz":-540,"elapsed":42,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"fa4faabd-90fa-4b88-8768-a42744176c5c"},"source":["a=[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\"]\n","max_lang = max(a)\n","min_lang = min(a)\n","\n","print(f\"리스트의 최댓값: {max_lang}\")\n","print(f\"리스트의 최솟값: {min_lang}\")"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["리스트의 최댓값: 9\n","리스트의 최솟값: 1\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9fcc2622","executionInfo":{"status":"ok","timestamp":1756097636333,"user_tz":-540,"elapsed":47,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"0a3e3d29-bb8f-4255-abdb-d3ecab251cb9"},"source":["cook = [\"피자\", \"김밥\", \"만두\", \"양념치킨\", \"족발\", \"피자\", \"김치만두\", \"쫄면\"]\n","print(f\"데이터의 개수: {cook}\")"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["데이터의 개수: ['피자', '김밥', '만두', '양념치킨', '족발', '피자', '김치만두', '쫄면']\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ff12b73f","executionInfo":{"status":"ok","timestamp":1756097750185,"user_tz":-540,"elapsed":21,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"3c9d37e8-288a-446f-a847-966149f7da9d"},"source":["cook = [\"피자\", \"김밥\", \"만두\", \"양념치킨\", \"족발\", \"피자\", \"김치만두\", \"쫄면\"]\n","\n","cook_list_length = len(cook)\n","\n","print(f\"'리스트' 리스트의 데이터 개수: {cook_list_length}\")"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["'리스트' 리스트의 데이터 개수: 8\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6ab39458","executionInfo":{"status":"ok","timestamp":1756098122003,"user_tz":-540,"elapsed":5,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"46bd9390-70ae-4c19-e2e7-96dfd2bcf42e"},"source":["ice = {\"메로나\": 1000, \"폴로포\": 1200, \"빵빠레\": 1800, \"죠스바\": 1200, \"월드콘\": 1500}\n","\n","ice[\"메로나\"] = 1300\n","\n","print(\"가격 정보 업뎁 후:\")\n","print(ice)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["가격 정보 업뎁 후:\n","{'메로나': 1300, '폴로포': 1200, '빵빠레': 1800, '죠스바': 1200, '월드콘': 1500}\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"562cd200","executionInfo":{"status":"ok","timestamp":1756098197485,"user_tz":-540,"elapsed":3,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"eb28f3f5-499a-4458-dc81-908443494a34"},"source":[],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["'메로나'의 가격: 1300\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"45330ff1","executionInfo":{"status":"ok","timestamp":1756098312483,"user_tz":-540,"elapsed":22,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"7137d31a-88d2-46a8-bfb0-10b8b2d4b9b3"},"source":[],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["수강생 및 등급 딕셔너리:\n","{'나이썬': 'b', '김자바': 'b', '김씨': 'a', '박씨샵': 'c'}\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bd205edc","executionInfo":{"status":"ok","timestamp":1756098470691,"user_tz":-540,"elapsed":8,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"1d70f3d3-013e-4f8c-fcf5-892ab229e409"},"source":[],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["업데이트된 'ice' 딕셔너리:\n","{'메로나': 1300, '폴로포': 1200, '빵빠레': 1800, '죠스바': 1200, '월드콘': 1500, '보석바': [650, 10]}\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9ef60711","executionInfo":{"status":"ok","timestamp":1756098756013,"user_tz":-540,"elapsed":17,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"8915c247-c58b-40fe-fe3d-39372925e76a"},"source":[],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["딕셔너리의 키 목록 (리스트):\n","['메로나', '폴로포', '빵빠레', '죠스바', '월드콘']\n"]}]},{"cell_type":"code","source":["x = [34, 22, 10, 3, 55, 66]\n","average = sum(x) / len(x)\n","print(average)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JczA2qhYxZ55","executionInfo":{"status":"ok","timestamp":1756100930819,"user_tz":-540,"elapsed":17,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"c115cba5-152d-4dd6-81d5-ef17c6592eb3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["31.666666666666668\n"]}]},{"cell_type":"code","source":["ozkim = { \"국어\" : 90, \"수학\" : 80, \"과학\" : 82, \"영어\" : 72 } # '수학' 키 오타 수정\n","result = sum(ozkim.values()) / len(ozkim)\n","print(result)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"V2OcpGJEyEc3","executionInfo":{"status":"ok","timestamp":1756101111832,"user_tz":-540,"elapsed":7,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"02699c73-b617-4b83-d60d-39bbdd6e1f82"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["81.0\n"]}]},{"cell_type":"markdown","source":[],"metadata":{"id":"YEzmKl9IyERO"}},{"cell_type":"code","source":[],"metadata":{"id":"12SUVMW9yOAc"},"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0550111a","executionInfo":{"status":"ok","timestamp":1756101282726,"user_tz":-540,"elapsed":6,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"c864e078-4086-46be-f18d-4884e3446a85"},"source":["상자 = {\"아디다스\": [\"신발\", \"2개\"],\n","            \"나이키\": [\"모자\", \"5개\"],\n","            \"뉴발란스\": [\"가방\", \"1개\"]}\n","\n","상자[\"칼하트\"] = [\"후드티\", \"2벌\"]\n","\n","print(\"리스트업:\")\n","print(상자)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["리스트업:\n","{'아디다스': ['신발', '2개'], '나이키': ['모자', '5개'], '뉴발란스': ['가방', '1개'], '칼하트': ['후드티', '2벌']}\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"AyQUtRP5y7j8"},"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"41d5f3db","executionInfo":{"status":"ok","timestamp":1756101492594,"user_tz":-540,"elapsed":12,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"a9f6eea6-ec8f-445c-8e85-a9385ac73c9b"},"source":["keys = [\"뉴진스\", \"아이브\", \"에스파\"]\n","vals = [\"하이브\" , \"스타쉽\", \"SM\"]\n","\n","agency_dict = dict(zip(keys, vals))\n","\n","print(\"agency_dict:\")\n","print(agency_dict)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["agency_dict:\n","{'뉴진스': '하이브', '아이브': '스타쉽', '에스파': 'SM'}\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d4959e85","executionInfo":{"status":"ok","timestamp":1756101407331,"user_tz":-540,"elapsed":4,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"3b1aac05-5ec0-4ed9-a5e4-c0e30043dc3c"},"source":["과일_바구니 = [\"사과\", \"바나나\", \"오렌지\"]\n","\n","'두리안' in 과일_바구니"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["balance = 1000\n","print(\"현재 잔액은\", balance, \"원입니다.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"I5rCWpJ3gpAv","executionInfo":{"status":"ok","timestamp":1756180429940,"user_tz":-540,"elapsed":6,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"49b7b022-8e07-4fb7-be1d-5de38bde897a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["현재 잔액은 1000 원입니다.\n"]}]},{"cell_type":"code","source":["receipts = []\n","\n","deposit_amount = int(input(\"입금하실 금액을 입력하세요: \"))\n","\n","balance += deposit_amount\n","\n","receipts.append(('입금', deposit_amount, balance))\n","\n","print(\"입금 후 잔액은\", balance, \"원입니다.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1tU0z4fRhAYu","executionInfo":{"status":"ok","timestamp":1756180549927,"user_tz":-540,"elapsed":3522,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"90c02bda-ffec-423d-de22-b82ea8f6d274"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["입금하실 금액을 입력하세요: 90\n","입금 후 잔액은 90001090 원입니다.\n"]}]},{"cell_type":"code","source":["\n","withdraw_amount = int(input(\"출금하실 금액을 입력하세요: \"))\n","\n","\n","if withdraw_amount > balance:\n","    print(\"잔액이 부족하여 현재 잔액(\", balance, \"원)만큼만 출금합니다.\")\n","    actual_withdraw = balance\n","\n","    balance = 0\n","else:\n","    balance -= withdraw_amount\n","    actual_withdraw = withdraw_amount\n","\n","\n","receipts.append(('출금', actual_withdraw, balance))\n","\n","print(\"출금 후 잔액은\", balance, \"원입니다.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"waC6ShB8hR51","executionInfo":{"status":"ok","timestamp":1756180664481,"user_tz":-540,"elapsed":5254,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"09319c55-e8d6-4371-d99b-fa6bf49b4994"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["출금하실 금액을 입력하세요: 900000\n","출금 후 잔액은 89101090 원입니다.\n"]}]},{"cell_type":"code","source":["print(\"--- 모든 거래 내역 ---\")\n","\n","for transaction in receipts:\n","\n","    trade_type, amount, current_balance = transaction\n","\n","    print(f\"거래 종류: {trade_type}, 금액: {amount}원, 거래 후 잔액: {current_balance}원\")\n","\n","print(\"----------------------\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SS1HFRC2hgFJ","executionInfo":{"status":"ok","timestamp":1756180668815,"user_tz":-540,"elapsed":78,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"c6680e3c-d098-402c-a441-26b79b4a12de"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["--- 모든 거래 내역 ---\n","거래 종류: 입금, 금액: 90원, 거래 후 잔액: 90001090원\n","거래 종류: 출금, 금액: 900000원, 거래 후 잔액: 89101090원\n","----------------------\n"]}]},{"cell_type":"code","source":["if not ' ':\n","    print(True)\n","else:\n","    print(False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"u7T1N1cKkGO3","executionInfo":{"status":"ok","timestamp":1756181464410,"user_tz":-540,"elapsed":7,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"0826c54a-61e8-4d06-f70e-7f1c6f1557f0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["False\n"]}]},{"cell_type":"code","source":["오피스텔 = [ [201, 202], [301, 302], [401, 402] ]\n","\n","for floor in 오피스텔:\n","    for room in floor:\n","        print(f\"{room}호\")\n","    print(\"----\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"O8PNHdcTlYDi","executionInfo":{"status":"ok","timestamp":1756181663096,"user_tz":-540,"elapsed":7,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"5f0a93d1-1da6-4bac-8bb8-52d59983b0fc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["201호\n","202호\n","----\n","301호\n","302호\n","----\n","401호\n","402호\n","----\n"]}]},{"cell_type":"code","source":["ohlc = [[\"open\", \"high\", \"low\", \"close\"], [100, 110, 70, 100], [200, 210, 180, 190], [300, 310, 300, 310]]\n","\n","for data in ohlc[1:]: # 헤더를 제외하고 데이터부터 시작\n","    close_price = data[3]\n","    if close_price > 150:\n","        print(close_price)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Uo-RvEYTldbv","executionInfo":{"status":"ok","timestamp":1756181688556,"user_tz":-540,"elapsed":11,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"ef899da1-a437-43bd-84b0-7dc1dfda885f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["190\n","310\n"]}]},{"cell_type":"code","source":["num = 100\n","while True:\n","    if num % 23 == 0:\n","        print(num)\n","        break\n","    num += 1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"H8H0Farmlw9y","executionInfo":{"status":"ok","timestamp":1756181765601,"user_tz":-540,"elapsed":8,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"e195bc1e-cdbb-4772-af66-9ffe7167854a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["115\n"]}]},{"cell_type":"code","source":["x = 2\n","n = 5\n","result = []\n","for i in range(1, n + 1):\n","    result.append(x * i)\n","print(result) # 출력: [2, 4, 6, 8, 10]\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sbXnvVgplw2Y","executionInfo":{"status":"ok","timestamp":1756181847454,"user_tz":-540,"elapsed":12,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"5a944d1c-7338-4040-d137-7bf6f0c8968d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[2, 4, 6, 8, 10]\n"]}]},{"cell_type":"code","source":["phone_number = \"01012347890\"\n","\n","masked_number = phone_number[:-4] + \"****\"\n","print(masked_number)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dFEfWX_NmNzl","executionInfo":{"status":"ok","timestamp":1756181891433,"user_tz":-540,"elapsed":5,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"31b08fbe-71cd-4fbd-fb56-402fff36c805"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0101234****\n"]}]},{"cell_type":"code","source":["s = \"77three4one\"\n","num_words = {\n","    \"zero\": \"0\", \"one\": \"1\", \"two\": \"2\", \"three\": \"3\", \"four\": \"4\",\n","    \"five\": \"5\", \"six\": \"6\", \"seven\": \"7\", \"eight\": \"8\", \"nine\": \"9\"\n","}\n","\n","for word, num in num_words.items():\n","    s = s.replace(word, num)\n","\n","result = int(s)\n","print(result)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"C2GkSsZ7mNwj","executionInfo":{"status":"ok","timestamp":1756181941217,"user_tz":-540,"elapsed":43,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"1f4c657e-e852-49d6-cc76-6c5fa5b509d5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["77341\n"]}]},{"cell_type":"code","source":["arr1 = [[1, 2], [2, 3]]\n","arr2 = [[3, 4], [5, 6]]\n","result = []\n","\n","# 행(row)의 개수만큼 반복\n","for i in range(len(arr1)):\n","    row = []\n","    # 열(column)의 개수만큼 반복\n","    for j in range(len(arr1[0])):\n","        # 같은 위치의 원소를 더함\n","        row.append(arr1[i][j] + arr2[i][j])\n","    result.append(row)\n","\n","print(result) # 출력: [[4, 6], [7, 9]]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qCIH9mGimNtm","executionInfo":{"status":"ok","timestamp":1756181991650,"user_tz":-540,"elapsed":42,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"368ab1db-df7c-4832-b938-9e306bf3909c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[4, 6], [7, 9]]\n"]}]},{"cell_type":"code","source":["x = 17\n","digit_sum = sum([int(digit) for digit in str(x)])\n","\n","if x % digit_sum == 0:\n","    print(True)\n","else:\n","    print(False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eZO5BxzimNqr","executionInfo":{"status":"ok","timestamp":1756182032715,"user_tz":-540,"elapsed":9,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"a298256b-ef93-401f-f971-9dd2f0a522a8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["False\n"]}]},{"cell_type":"code","source":["seoul = [\"Jane\", \"Kim\"]\n","kim_index = seoul.index(\"Kim\")\n","print(f\"김서방은 {kim_index}에 있다\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0ZHZDDZhmNnh","executionInfo":{"status":"ok","timestamp":1756182107700,"user_tz":-540,"elapsed":12,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"07e2f97a-8817-46b4-df91-3bf56b6226fd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["김서방은 1에 있다\n"]}]},{"cell_type":"code","source":["numbers = [5, 8, 1, 0, 6, 9]\n","total_sum = sum(range(10))\n","given_sum = sum(numbers)\n","result = total_sum - given_sum\n","print(result)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Q4g8v30zmNg2","executionInfo":{"status":"ok","timestamp":1756182159506,"user_tz":-540,"elapsed":11,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"77faeee4-214d-4da6-bc83-cfae946ec078"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["16\n"]}]},{"cell_type":"code","source":["inventory = {\n","    \"팥붕어빵\": 10,\n","    \"슈크림붕어빵\": 8,\n","    \"초코붕어빵\": 5\n","}\n","\n","print(\"===== 현재 붕어빵 재고 =====\")\n","for name, stock in inventory.items():\n","    print(f\"- {name}: {stock}개\")\n","print(\"==========================\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pp6lVR3Xl468","executionInfo":{"status":"ok","timestamp":1756198608972,"user_tz":-540,"elapsed":49,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"69e2799c-0e96-4cac-a81e-b0322e2837c4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["===== 현재 붕어빵 재고 =====\n","- 팥붕어빵: 10개\n","- 슈크림붕어빵: 8개\n","- 초코붕어빵: 5개\n","==========================\n"]}]},{"cell_type":"code","source":["inventory = {\n","    \"팥붕어빵\": 10,\n","    \"슈크림붕어빵\": 8,\n","    \"초코붕어빵\": 5\n","}\n","print(\"===== 붕어빵 주문 =====\")\n","order_item = input(\"주문할 붕어빵 종류를 입력하세요 (예: 팥붕어빵): \")\n","order_quantity = int(input(f\"{order_item}을(를) 몇 개 주문하시겠어요?: \"))\n","order = {\n","    \"item\": order_item,\n","    \"quantity\": order_quantity\n","}\n","print(\"\\n===== 주문 확인서 =====\")\n","print(f\"주문 내역: {order['item']} {order['quantity']}개\")\n","print(\"======================\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"C0rYKDxdmC7K","executionInfo":{"status":"ok","timestamp":1756198676915,"user_tz":-540,"elapsed":13992,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"f418e4d0-a9b6-493b-b6b9-dc056b229879"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["===== 붕어빵 주문 =====\n","주문할 붕어빵 종류를 입력하세요 (예: 팥붕어빵): 피자 붕어빵\n","피자 붕어빵을(를) 몇 개 주문하시겠어요?: 90\n","\n","===== 주문 확인서 =====\n","주문 내역: 피자 붕어빵 90개\n","======================\n"]}]},{"cell_type":"code","source":["inventory = {\n","    \"팥붕어빵\": 10,\n","    \"슈크림붕어빵\": 8,\n","    \"초코붕어빵\": 5\n","}\n","print(\"===== 붕어빵 주문 =====\")\n","for name, stock in inventory.items():\n","    print(f\"- {name}: {stock}개\")\n","print(\"======================\")\n","\n","order_item = input(\"주문할 붕어빵 종류를 입력하세요 (예: 팥붕어빵): \")\n","order_quantity = int(input(f\"{order_item}을(를) 몇 개 주문하시겠어요?: \"))\n","if order_item in inventory and inventory[order_item] >= order_quantity:\n","    inventory[order_item] -= order_quantity\n","    print(f\"\\n✅ 판매 완료! {order_item} {order_quantity}개를 판매했습니다.\")\n","    print(\"감사합니다!\")\n","elif order_item in inventory and inventory[order_item] < order_quantity:\n","    print(f\"\\n🚨 죄송합니다. {order_item}의 재고가 부족합니다. (남은 재고: {inventory[order_item]}개)\")\n","else:\n","    print(f\"\\n🚨 죄송합니다. '{order_item}'은(는) 판매하지 않는 메뉴입니다.\")\n","print(\"\\n===== 현재 남은 재고 =====\")\n","for name, stock in inventory.items():\n","    print(f\"- {name}: {stock}개\")\n","print(\"==========================\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MkwS1yTCmC18","executionInfo":{"status":"ok","timestamp":1756198841621,"user_tz":-540,"elapsed":11557,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"3ee4253b-e8fc-4d59-eaef-1700050f067f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["===== 붕어빵 주문 =====\n","- 팥붕어빵: 10개\n","- 슈크림붕어빵: 8개\n","- 초코붕어빵: 5개\n","======================\n","주문할 붕어빵 종류를 입력하세요 (예: 팥붕어빵): 초코\n","초코을(를) 몇 개 주문하시겠어요?: 6\n","\n","🚨 죄송합니다. '초코'은(는) 판매하지 않는 메뉴입니다.\n","\n","===== 현재 남은 재고 =====\n","- 팥붕어빵: 10개\n","- 슈크림붕어빵: 8개\n","- 초코붕어빵: 5개\n","==========================\n"]}]},{"cell_type":"code","source":["inventory = {\n","    \"팥붕어빵\": 10,\n","    \"슈크림붕어빵\": 8,\n","    \"초코붕어빵\": 5\n","}\n","while True:\n","    print(\"\\n===== 붕어빵 주문 =====\")\n","    for name, stock in inventory.items():\n","        print(f\"- {name}: {stock}개\")\n","    print(\"======================\")\n","\n","    order_item = input(\"주문할 붕어빵 종류를 입력하세요 (종료하시려면 '종료' 입력): \")\n","    if order_item == \"종료\":\n","        print(\"\\n프로그램을 종료합니다. 이용해주셔서 감사합니다.\")\n","        break\n","    if order_item not in inventory:\n","        print(f\"\\n🚨 죄송합니다. '{order_item}'은(는) 판매하지 않는 메뉴입니다.\")\n","        continue\n","    try:\n","        order_quantity = int(input(f\"{order_item}을(를) 몇 개 주문하시겠어요?: \"))\n","        if order_quantity <= 0:\n","            print(\"\\n🚨 1개 이상 주문해주세요.\")\n","            continue\n","    except ValueError:\n","        print(\"\\n🚨 잘못된 입력입니다. 수량은 숫자로 입력해주세요.\")\n","        continue\n","    if inventory[order_item] >= order_quantity:\n","        inventory[order_item] -= order_quantity\n","        print(f\"\\n✅ 판매 완료! {order_item} {order_quantity}개를 판매했습니다.\")\n","        print(\"감사합니다!\")\n","    else:\n","        print(f\"\\n🚨 죄송합니다. {order_item}의 재고가 부족합니다. (남은 재고: {inventory[order_item]}개)\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ERZ8W8a9mCsD","executionInfo":{"status":"ok","timestamp":1756199152124,"user_tz":-540,"elapsed":181879,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"61bf5f75-dde8-43a1-b786-a21a025f6968"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","===== 붕어빵 주문 =====\n","- 팥붕어빵: 10개\n","- 슈크림붕어빵: 8개\n","- 초코붕어빵: 5개\n","======================\n","주문할 붕어빵 종류를 입력하세요 (종료하시려면 '종료' 입력): 팥 붕어빵\n","\n","🚨 죄송합니다. '팥 붕어빵'은(는) 판매하지 않는 메뉴입니다.\n","\n","===== 붕어빵 주문 =====\n","- 팥붕어빵: 10개\n","- 슈크림붕어빵: 8개\n","- 초코붕어빵: 5개\n","======================\n","주문할 붕어빵 종류를 입력하세요 (종료하시려면 '종료' 입력): 종료\n","\n","프로그램을 종료합니다. 이용해주셔서 감사합니다.\n"]}]},{"cell_type":"code","source":["inventory = {\n","    \"팥붕어빵\": 10,\n","    \"슈크림붕어빵\": 8,\n","    \"초코붕어빵\": 5\n","}\n","while True:\n","    print(\"\\n*** 붕어빵 자동 판매 시스템 ***\")\n","    mode = input(\"모드를 선택하세요 (1: 손님, 2: 관리자, 3: 종료): \")\n","    if mode == '1':\n","        while True:\n","            print(\"\\n===== 붕어빵 주문 =====\")\n","            for name, stock in inventory.items():\n","                print(f\"- {name}: {stock}개\")\n","            print(\"======================\")\n","            order_item = input(\"주문할 붕어빵 종류를 입력하세요 (이전으로 돌아가려면 '종료' 입력): \")\n","            if order_item == \"종료\":\n","                break\n","            if order_item not in inventory:\n","                print(f\"\\n🚨 죄송합니다. '{order_item}'은(는) 판매하지 않는 메뉴입니다.\")\n","                continue\n","            try:\n","                order_quantity = int(input(f\"{order_item}을(를) 몇 개 주문하시겠어요?: \"))\n","                if order_quantity <= 0:\n","                    print(\"\\n🚨 1개 이상 주문해주세요.\")\n","                    continue\n","            except ValueError:\n","                print(\"\\n🚨 잘못된 입력입니다. 수량은 숫자로 입력해주세요.\")\n","                continue\n","            if inventory[order_item] >= order_quantity:\n","                inventory[order_item] -= order_quantity\n","                print(f\"\\n✅ 판매 완료! {order_item} {order_quantity}개를 판매했습니다.\")\n","                print(\"감사합니다!\")\n","            else:\n","                print(f\"\\n🚨 죄송합니다. {order_item}의 재고가 부족합니다. (남은 재고: {inventory[order_item]}개)\")\n","    elif mode == '2':\n","        while True:\n","            print(\"\\n===== 관리자 모드: 재고 추가 =====\")\n","            for name, stock in inventory.items():\n","                print(f\"- {name}: {stock}개\")\n","            print(\"===============================\")\n","            item_to_add = input(\"재고를 추가할 붕어빵 종류를 입력하세요 (이전으로 돌아가려면 '종료' 입력): \")\n","            if item_to_add == \"종료\":\n","                break\n","            if item_to_add not in inventory:\n","                print(f\"\\n🚨 '{item_to_add}'은(는) 등록된 메뉴가 아닙니다.\")\n","                continue\n","            try:\n","                quantity_to_add = int(input(f\"{item_to_add}의 재고를 몇 개 추가하시겠어요?: \"))\n","                if quantity_to_add <= 0:\n","                    print(\"\\n🚨 1개 이상 추가해주세요.\")\n","                    continue\n","            except ValueError:\n","                print(\"\\n🚨 잘못된 입력입니다. 수량은 숫자로 입력해주세요.\")\n","                continue\n","            inventory[item_to_add] += quantity_to_add\n","            print(f\"\\n✅ 재고 추가 완료! {item_to_add}의 현재 재고는 {inventory[item_to_add]}개입니다.\")\n","    elif mode == '3':\n","        print(\"\\n프로그램을 종료합니다. 이용해주셔서 감사합니다.\")\n","        break\n","    else:\n","        print(\"\\n🚨 잘못된 입력입니다. 1, 2, 3 중에서 선택해주세요.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2k_mlAf4mCkZ","executionInfo":{"status":"ok","timestamp":1756199220577,"user_tz":-540,"elapsed":49835,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"f9488900-98dc-4dc3-c79c-a1d1c7b4c141"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","*** 붕어빵 자동 판매 시스템 ***\n","모드를 선택하세요 (1: 손님, 2: 관리자, 3: 종료): 2\n","\n","===== 관리자 모드: 재고 추가 =====\n","- 팥붕어빵: 10개\n","- 슈크림붕어빵: 8개\n","- 초코붕어빵: 5개\n","===============================\n","재고를 추가할 붕어빵 종류를 입력하세요 (이전으로 돌아가려면 '종료' 입력): 초코붕어빵\n","초코붕어빵의 재고를 몇 개 추가하시겠어요?: 900\n","\n","✅ 재고 추가 완료! 초코붕어빵의 현재 재고는 905개입니다.\n","\n","===== 관리자 모드: 재고 추가 =====\n","- 팥붕어빵: 10개\n","- 슈크림붕어빵: 8개\n","- 초코붕어빵: 905개\n","===============================\n","재고를 추가할 붕어빵 종류를 입력하세요 (이전으로 돌아가려면 '종료' 입력): 팥붕어빵\n","팥붕어빵의 재고를 몇 개 추가하시겠어요?: 90\n","\n","✅ 재고 추가 완료! 팥붕어빵의 현재 재고는 100개입니다.\n","\n","===== 관리자 모드: 재고 추가 =====\n","- 팥붕어빵: 100개\n","- 슈크림붕어빵: 8개\n","- 초코붕어빵: 905개\n","===============================\n","재고를 추가할 붕어빵 종류를 입력하세요 (이전으로 돌아가려면 '종료' 입력): 슈크림뿡어빵\n","\n","🚨 '슈크림뿡어빵'은(는) 등록된 메뉴가 아닙니다.\n","\n","===== 관리자 모드: 재고 추가 =====\n","- 팥붕어빵: 100개\n","- 슈크림붕어빵: 8개\n","- 초코붕어빵: 905개\n","===============================\n","재고를 추가할 붕어빵 종류를 입력하세요 (이전으로 돌아가려면 '종료' 입력): 90\n","\n","🚨 '90'은(는) 등록된 메뉴가 아닙니다.\n","\n","===== 관리자 모드: 재고 추가 =====\n","- 팥붕어빵: 100개\n","- 슈크림붕어빵: 8개\n","- 초코붕어빵: 905개\n","===============================\n","재고를 추가할 붕어빵 종류를 입력하세요 (이전으로 돌아가려면 '종료' 입력): 종료\n","\n","*** 붕어빵 자동 판매 시스템 ***\n","모드를 선택하세요 (1: 손님, 2: 관리자, 3: 종료): 3\n","\n","프로그램을 종료합니다. 이용해주셔서 감사합니다.\n"]}]},{"cell_type":"code","source":["inventory = {\n","    \"팥붕어빵\": 10,\n","    \"슈크림붕어빵\": 8,\n","    \"초코붕어빵\": 5\n","}\n","prices = {\n","    \"팥붕어빵\": 1000,\n","    \"슈크림붕어빵\": 1200,\n","    \"초코붕어빵\": 1500\n","}\n","sales = {\n","    \"팥붕어빵\": 0,\n","    \"슈크림붕어빵\": 0,\n","    \"초코붕어빵\": 0\n","}\n","while True:\n","    print(\"\\n*** 붕어빵 자동 판매 시스템 ***\")\n","    mode = input(\"모드를 선택하세요 (1: 손님, 2: 관리자, 3: 종료): \")\n","    if mode == '1':\n","        while True:\n","            print(\"\\n===== 붕어빵 주문 =====\")\n","            for name, stock in inventory.items():\n","                print(f\"- {name}: {stock}개 (가격: {prices[name]}원)\")\n","            print(\"======================\")\n","            order_item = input(\"주문할 붕어빵 종류를 입력하세요 (이전으로 돌아가려면 '종료' 입력): \")\n","            if order_item == \"종료\":\n","                break\n","            if order_item not in inventory:\n","                print(f\"\\n🚨 죄송합니다. '{order_item}'은(는) 판매하지 않는 메뉴입니다.\")\n","                continue\n","            try:\n","                order_quantity = int(input(f\"{order_item}을(를) 몇 개 주문하시겠어요?: \"))\n","                if order_quantity <= 0:\n","                    print(\"\\n🚨 1개 이상 주문해주세요.\")\n","                    continue\n","            except ValueError:\n","                print(\"\\n🚨 잘못된 입력입니다. 수량은 숫자로 입력해주세요.\")\n","                continue\n","            if inventory[order_item] >= order_quantity:\n","                inventory[order_item] -= order_quantity\n","                sales[order_item] += order_quantity\n","                print(f\"\\n✅ 판매 완료! {order_item} {order_quantity}개를 판매했습니다.\")\n","                print(\"감사합니다!\")\n","            else:\n","                print(f\"\\n🚨 죄송합니다. {order_item}의 재고가 부족합니다. (남은 재고: {inventory[order_item]}개)\")\n","    elif mode == '2':\n","        while True:\n","            print(\"\\n===== 관리자 모드: 재고 추가 =====\")\n","            for name, stock in inventory.items():\n","                print(f\"- {name}: {stock}개\")\n","            print(\"===============================\")\n","            item_to_add = input(\"재고를 추가할 붕어빵 종류를 입력하세요 (이전으로 돌아가려면 '종료' 입력): \")\n","            if item_to_add == \"종료\":\n","                break\n","            if item_to_add not in inventory:\n","                print(f\"\\n🚨 '{item_to_add}'은(는) 등록된 메뉴가 아닙니다.\")\n","                continue\n","            try:\n","                quantity_to_add = int(input(f\"{item_to_add}의 재고를 몇 개 추가하시겠어요?: \"))\n","                if quantity_to_add <= 0:\n","                    print(\"\\n🚨 1개 이상 추가해주세요.\")\n","                    continue\n","            except ValueError:\n","                print(\"\\n🚨 잘못된 입력입니다. 수량은 숫자로 입력해주세요.\")\n","                continue\n","            inventory[item_to_add] += quantity_to_add\n","            print(f\"\\n✅ 재고 추가 완료! {item_to_add}의 현재 재고는 {inventory[item_to_add]}개입니다.\")\n","    elif mode == '3':\n","        print(\"\\n프로그램을 종료합니다. 이용해주셔서 감사합니다.\")\n","        print(\"\\n===== 최종 매출 보고 =====\")\n","        total_revenue = 0\n","        for name, count in sales.items():\n","            revenue = prices[name] * count\n","            total_revenue += revenue\n","            print(f\"- {name}: {count}개 판매, 매출: {revenue}원\")\n","        print(\"--------------------------\")\n","        print(f\"✨ 총 매출: {total_revenue}원\")\n","        print(\"==========================\")\n","        break\n","    else:\n","        print(\"\\n🚨 잘못된 입력입니다. 1, 2, 3 중에서 선택해주세요.\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sxUQLDWpmCcR","executionInfo":{"status":"ok","timestamp":1756199557612,"user_tz":-540,"elapsed":3009,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"6d69304f-3a64-4b70-e0b1-d1f827ede49c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","*** 붕어빵 자동 판매 시스템 ***\n","모드를 선택하세요 (1: 손님, 2: 관리자, 3: 종료): 3\n","\n","프로그램을 종료합니다. 이용해주셔서 감사합니다.\n","\n","===== 최종 매출 보고 =====\n","- 팥붕어빵: 0개 판매, 매출: 0원\n","- 슈크림붕어빵: 0개 판매, 매출: 0원\n","- 초코붕어빵: 0개 판매, 매출: 0원\n","--------------------------\n","✨ 총 매출: 0원\n","==========================\n"]}]},{"cell_type":"code","source":["def print_score(numbers):\n","  \"\"\"리스트를 받아 짝수만 출력하는 함수\"\"\"\n","  for num in numbers:\n","    if num % 2 == 0:\n","      print(num)\n","\n","print_even = [1, 3, 2, 10, 12, 11, 15]\n","print_score(print_even)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"O17N7jCev0Os","executionInfo":{"status":"ok","timestamp":1756268317288,"user_tz":-540,"elapsed":14,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"c2387316-5fc3-44b2-a1ac-f60b5f9e4b72"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["2\n","10\n","12\n"]}]},{"cell_type":"code","source":["class oz:\n","  pass"],"metadata":{"id":"Y_prqrE9v0Lr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["class oz:\n","  pass\n","\n","coding = oz()"],"metadata":{"id":"fGp672TCv0Hs"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["class oz:\n","  def __init__(self):\n","    print(\"클래스 정복\")\n","coding = oz()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MCEVAcZ-v0Ei","executionInfo":{"status":"ok","timestamp":1756268451807,"user_tz":-540,"elapsed":12,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"87a80ed3-5068-4d1e-c2d6-3356912a98b8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["클래스 정복\n"]}]},{"cell_type":"code","source":["class oz:\n","  def __init__(self, name, age, coding_level):\n","    self.name = name\n","    self.age = age\n","    self.coding_level = coding_level\n","coding = oz(\"김코\", 30, \"A\")"],"metadata":{"id":"GL1nbdkAv0Aw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(f\"이름 : {coding.name}\")\n","print(f\"나이 : {coding.age}\")\n","print(f\"코딩레벨 : {coding.coding_level}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Kp2qauPKvz9f","executionInfo":{"status":"ok","timestamp":1756268527228,"user_tz":-540,"elapsed":6,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"17f17a96-c307-457a-e386-068e5c3bc15f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["이름 : 김코\n","나이 : 30\n","코딩레벨 : A\n"]}]},{"cell_type":"code","source":["class oz:\n","  def __init__(self, name, age, coding_level):\n","    self.name = name\n","    self.age = age\n","    self.coding_level = coding_level\n","  def who(self):\n","    print(f\"이름: {self.name}, 나이: {self.age}, 코딩레벨: {self.coding_level}\")\n","coding = oz(\"김코\", 30, \"A\")\n","coding.who()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qUe_kyqmvz6F","executionInfo":{"status":"ok","timestamp":1756268559855,"user_tz":-540,"elapsed":13,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"6dc2f5e7-fc99-4a20-9feb-b7aa2e27b56c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["이름: 김코, 나이: 30, 코딩레벨: A\n"]}]},{"cell_type":"code","source":["def oz(a, b):\n","  \"\"\"두 수를 매개변수로 받아 곱한 결과를 반환하는 함수\"\"\"\n","  return a * b\n","result = oz(5, 10)\n","print(result)"],"metadata":{"id":"vupB2lymvz2X","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1756284094932,"user_tz":-540,"elapsed":10,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"2592dff9-4182-48d7-dec4-3937ba6e47e2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["50\n"]}]},{"cell_type":"code","source":["def make_url(text):\n","  return f\"www.{text}.com\"\n","print(make_url(\"google\"))"],"metadata":{"id":"6E_ZiidFvzzG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1756284315638,"user_tz":-540,"elapsed":56,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"f17fa493-fdef-4aee-bfa2-6658f5740f74"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["www.google.com\n"]}]},{"cell_type":"code","source":["class Person:\n","    def greeting(self):\n","        print('hello')\n","p = Person()\n","p.greeting()"],"metadata":{"id":"X_F-LU20vzwD","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1756284360539,"user_tz":-540,"elapsed":15,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"c0e34ef3-9070-463e-8aa2-f8df39d84f5b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["hello\n"]}]},{"cell_type":"code","source":["list_data = ['10', '20', '30', '40']\n","with open('test.csv', 'w') as f:\n","    f.write(','.join(list_data))"],"metadata":{"id":"-csLBrvUvzsz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def __init__(self):\n","    \"\"\"붕어빵 가게의 초기 재고, 가격, 판매량을 설정합니다.\"\"\"\n","    self.stock = {\n","        \"팥붕어빵\": 10,\n","        \"슈크림붕어빵\": 8,\n","        \"초코붕어빵\": 5\n","    }\n","    self.prices = {\n","        \"팥붕어빵\": 1000,\n","        \"슈크림붕어빵\": 1200,\n","        \"초코붕어빵\": 1500\n","    }\n","    self.sales = {\n","        \"팥붕어빵\": 0,\n","        \"슈크림붕어빵\": 0,\n","        \"초코붕어빵\": 0\n","    }"],"metadata":{"id":"u5Xo3iTDvzpl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def check_stock(self):\n","    print(\"\\n--- 현재 재고 ---\")\n","    for bread, count in self.stock.items():\n","        print(f\"{bread}: {count}개\")\n","    print(\"-----------------\\n\")"],"metadata":{"id":"OaUsndGQvzlq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def process_order(self, bread_type, bread_count):\n","    \"\"\"주문을 처리하고 재고를 업데이트합니다.\"\"\"\n","    if bread_type not in self.stock:\n","        print(\"❌ 없는 메뉴입니다. 다시 확인해주세요.\")\n","        return\n","    if self.stock[bread_type] < bread_count:\n","        print(f\"❌ 재고가 부족합니다. (남은 재고: {self.stock[bread_type]}개)\")\n","        return\n","    self.stock[bread_type] -= bread_count\n","    self.sales[bread_type] += bread_count\n","    price = self.prices[bread_type] * bread_count\n","    print(f\"✅ 주문이 완료되었습니다. {bread_type} {bread_count}개, 총 {price}원 입니다.\")"],"metadata":{"id":"SJ7s8qU2vze1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def admin_mode(self):\n","    \"\"\"관리자 모드에서 재고를 추가합니다.\"\"\"\n","    print(\"\\n--- 관리자 모드 ---\")\n","    try:\n","        bread_type = input(\"추가할 붕어빵 종류 (팥붕어빵, 슈크림붕어빵, 초코붕어빵): \")\n","        if bread_type not in self.stock:\n","            print(\"❌ 없는 메뉴입니다.\")\n","            return\n","        additional_stock = int(input(\"추가할 재고량: \"))\n","        if additional_stock < 0:\n","            print(\"❌ 재고는 0개 이상 추가해야 합니다.\")\n","            return\n","        self.stock[bread_type] += additional_stock\n","        print(f\"✅ 재고 추가 완료: {bread_type} {additional_stock}개\")\n","        self.check_stock()\n","    except ValueError:\n","        print(\"❌ 잘못된 입력입니다. 숫자를 입력해주세요.\")"],"metadata":{"id":"ylGK3pmJvzYA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def calculate_total_sales(self):\n","    \"\"\"총 매출을 계산하고 출력합니다.\"\"\"\n","    total_sales = 0\n","    print(\"\\n--- 정산 ---\")\n","    for bread, count in self.sales.items():\n","        sale_amount = count * self.prices[bread]\n","        total_sales += sale_amount\n","        print(f\"{bread} 판매량: {count}개, 매출: {sale_amount}원\")\n","    print(f\"✨ 총 매출: {total_sales}원 ✨\")"],"metadata":{"id":"3HA1Y17wuTxd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def main():\n","    \"\"\"프로그램의 주요 로직을 실행합니다.\"\"\"\n","    shop = BungeoppangShop()\n","    while True:\n","        mode = input(\"모드를 선택하세요 (주문, 관리자, 종료): \")\n","        if mode == \"주문\":\n","            try:\n","                bread_type = input(\"주문할 붕어빵 종류 (팥붕어빵, 슈크림붕어빵, 초코붕어빵): \")\n","                bread_count = int(input(\"주문할 개수: \"))\n","                if bread_count <= 0:\n","                   print(\"❌ 1개 이상 주문해야 합니다.\")\n","                   continue\n","                shop.process_order(bread_type, bread_count)\n","                shop.check_stock()\n","            except ValueError:\n","                print(\"❌ 잘못된 입력입니다. 개수는 숫자로 입력해주세요.\")\n","        elif mode == \"관리자\":\n","            shop.admin_mode()\n","        elif mode == \"종료\":\n","            shop.calculate_total_sales()\n","            print(\"프로그램을 종료합니다. 이용해주셔서 감사합니다. 👋\")\n","            break\n","        else:\n","            print(\"❌ 잘못된 모드입니다. '주문', '관리자', '종료' 중에서 선택해주세요.\")"],"metadata":{"id":"atmJ391JyFL0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["class BungeoppangShop:\n","    def __init__(self):\n","        self.stock = {\"팥붕어빵\": 10, \"슈크림붕어빵\": 8, \"초코붕어빵\": 5}\n","        self.prices = {\"팥붕어빵\": 1000, \"슈크림붕어빵\": 1200, \"초코붕어빵\": 1500}\n","        self.sales = {\"팥붕어빵\": 0, \"슈크림붕어빵\": 0, \"초코붕어빵\": 0}\n","        print(\"붕어빵 가게를 열었습니다! 🐟\")\n","        self.check_stock()\n","    def check_stock(self):\n","        print(\"\\n--- 현재 재고 ---\")\n","        for bread, count in self.stock.items():\n","            print(f\"{bread}: {count}개\")\n","        print(\"-----------------\\n\")\n","    def process_order(self, bread_type, bread_count):\n","        if bread_type not in self.stock:\n","            print(\"❌ 없는 메뉴입니다. 다시 확인해주세요.\")\n","            return\n","        if self.stock[bread_type] < bread_count:\n","            print(f\"❌ 재고가 부족합니다. (남은 재고: {self.stock[bread_type]}개)\")\n","            return\n","        self.stock[bread_type] -= bread_count\n","        self.sales[bread_type] += bread_count\n","        price = self.prices[bread_type] * bread_count\n","        print(f\"✅ 주문이 완료되었습니다. {bread_type} {bread_count}개, 총 {price}원 입니다.\")\n","    def admin_mode(self):\n","        print(\"\\n--- 관리자 모드 ---\")\n","        try:\n","            bread_type = input(\"추가할 붕어빵 종류 (팥붕어빵, 슈크림붕어빵, 초코붕어빵): \")\n","            if bread_type not in self.stock:\n","                print(\"❌ 없는 메뉴입니다.\")\n","                return\n","            additional_stock = int(input(\"추가할 재고량: \"))\n","            if additional_stock < 0:\n","                print(\"❌ 재고는 0개 이상 추가해야 합니다.\")\n","                return\n","            self.stock[bread_type] += additional_stock\n","            print(f\"✅ 재고 추가 완료: {bread_type} {additional_stock}개\")\n","            self.check_stock()\n","        except ValueError:\n","            print(\"❌ 잘못된 입력입니다. 숫자를 입력해주세요.\")\n","    def calculate_total_sales(self):\n","        total_sales = 0\n","        print(\"\\n--- 정산 ---\")\n","        for bread, count in self.sales.items():\n","            sale_amount = count * self.prices[bread]\n","            total_sales += sale_amount\n","            print(f\"{bread} 판매량: {count}개, 매출: {sale_amount}원\")\n","        print(f\"✨ 총 매출: {total_sales}원 ✨\")\n","def main():\n","    shop = BungeoppangShop()\n","    while True:\n","        mode = input(\"모드를 선택하세요 (주문, 관리자, 종료): \")\n","        if mode == \"주문\":\n","            try:\n","                bread_type = input(\"주문할 붕어빵 종류 (팥붕어빵, 슈크림붕어빵, 초코붕어빵): \")\n","                bread_count = int(input(\"주문할 개수: \"))\n","                if bread_count <= 0:\n","                   print(\"❌ 1개 이상 주문해야 합니다.\")\n","                   continue\n","                shop.process_order(bread_type, bread_count)\n","                shop.check_stock()\n","            except ValueError:\n","                print(\"❌ 잘못된 입력입니다. 개수는 숫자로 입력해주세요.\")\n","        elif mode == \"관리자\":\n","            shop.admin_mode()\n","        elif mode == \"종료\":\n","            shop.calculate_total_sales()\n","            print(\"프로그램을 종료합니다. 이용해주셔서 감사합니다. 👋\")\n","            break\n","        else:\n","            print(\"❌ 잘못된 모드입니다. '주문', '관리자', '종료' 중에서 선택해주세요.\")\n","if __name__ == \"__main__\":\n","    main()"],"metadata":{"id":"3O0N6_jMyHXQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def greet_user(name, age):\n","  print(f\"안녕하세요, {name}님! 당신은 {age}살입니다.\")\n","name_input = input(\"이름을 입력하세요: \")\n","age_input = input(\"나이를 입력하세요: \")\n","greet_user(name_input, age_input)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"z0Q58_K_xn1p","executionInfo":{"status":"ok","timestamp":1756369510730,"user_tz":-540,"elapsed":77217,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"3a95dc21-f477-4f79-b46e-6ea7adfeb005"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["이름을 입력하세요: 이현직\n","나이를 입력하세요: 23\n","안녕하세요, 이현직님! 당신은 23살입니다.\n"]}]},{"cell_type":"code","source":["def sum_numbers(*args):\n","  return sum(args)\n","print(sum_numbers(1, 2, 3))\n","print(sum_numbers(10, 20, 30, 40, 50))"],"metadata":{"id":"rBLWpXNDxnyu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def print_name(name=\"익명\"):\n","  print(f\"이름: {name}\")\n","print_name(\"홍길동\")\n","print_name()"],"metadata":{"id":"l__4JJ7Lxnv4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def print_info(*, name, age, gender):\n","  print(f\"이름: {name}, 나이: {age}, 성별: {gender}\")\n","print_info(name=\"김철수\", age=30, gender=\"남성\")"],"metadata":{"id":"o5ozFcOnxns3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def add(a: int, b: int) -> int:\n","  return a + b\n","print(add(5, 3))"],"metadata":{"id":"QFZrIbvdxnp5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def odd_numbers(n: int):\n","  for i in range(n + 1):\n","    if i % 2 != 0:\n","      yield i\n","for num in odd_numbers(10):\n","  print(num)"],"metadata":{"id":"FRjRCGDvxnmx"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["add_lambda = lambda a, b: a + b\n","print(add_lambda(10, 5))"],"metadata":{"id":"tPvFSlr8xnjw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def min_max(a, b, c):\n","  num_tuple = (a, b, c)\n","  print(f\"최소값: {min(num_tuple)}, 최대값: {max(num_tuple)}\")\n","min_max(15, 7, 22)"],"metadata":{"id":"f54OA19-xngl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def is_even(number: int) -> bool:\n","  if number % 2 == 0:\n","    return True\n","  return False\n","print(is_even(10))\n","print(is_even(7))"],"metadata":{"id":"RtGqGUnOxndi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def factorial(n: int) -> int:\n","  if n == 0:\n","    return 1\n","  else:\n","    return n * factorial(n - 1)\n","print(factorial(5))"],"metadata":{"id":"mTzx-Bsfxnag"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def print_lengths(str_list: list):\n","  for s in str_list:\n","    print(f\"'{s}'의 길이: {len(s)}\")\n","print_lengths([\"apple\", \"banana\", \"cherry\"])"],"metadata":{"id":"DdrFNQduxnXv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def longer_string(s1: str, s2: str) -> str:\n","  if len(s1) >= len(s2):\n","    return s1\n","  else:\n","    return s2\n","print(longer_string(\"hello\", \"world\"))\n","print(longer_string(\"python\", \"code\"))"],"metadata":{"id":"8eAcpRghxnUm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["address_book = []\n","def add_contact(name: str, phone: str, email: str = '') -> None:\n","    contact = {\n","        'name': name,\n","        'phone': phone,\n","        'email': email\n","    }\n","    address_book.append(contact)\n","    print(f\"✅ 연락처가 추가되었습니다: {contact}\")\n","add_contact(\"홍길동\", \"010-1234-5678\", \"hong@example.com\")\n","add_contact(\"김철수\", \"010-2345-6789\")\n","print(\"\\n현재 주소록:\", address_book)"],"metadata":{"id":"wiNERggQxnOg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["address_book = [\n","    {'name': '홍길동', 'phone': '010-1234-5678', 'email': 'hong@example.com'},\n","    {'name': '김철수', 'phone': '010-2345-6789', 'email': ''}\n","]\n","def view_contacts() -> None:\n","    \"\"\"저장된 모든 연락처의 정보를 화면에 출력합니다.\"\"\"\n","    print(\"\\n--- 전체 연락처 목록 ---\")\n","    if not address_book:\n","        print(\"주소록이 비어있습니다.\")\n","    else:\n","        for idx, contact in enumerate(address_book, 1):\n","            print(f\"{idx}. 이름: {contact['name']}, 전화번호: {contact['phone']}, 이메일: {contact['email']}\")\n","    print(\"----------------------\")\n","view_contacts()\n","address_book = []\n","view_contacts()"],"metadata":{"id":"IN7yqlmCxnLW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["address_book = [\n","    {'name': '홍길동', 'phone': '010-1234-5678', 'email': 'hong@example.com'},\n","    {'name': '김철수', 'phone': '010-2345-6789', 'email': ''},\n","    {'name': '홍진호', 'phone': '010-2222-2222', 'email': 'hong2@example.com'}\n","]\n","def search_contacts(keyword: str) -> None:\n","    print(f\"\\n--- '{keyword}' 검색 결과 ---\")\n","    found_contacts = [c for c in address_book if keyword.lower() in c['name'].lower()]\n","    if not found_contacts:\n","        print(\"검색된 연락처가 없습니다.\")\n","    else:\n","        for contact in found_contacts:\n","            print(f\"이름: {contact['name']}, 전화번호: {contact['phone']}, 이메일: {contact['email']}\")\n","    print(\"-------------------------\")\n","search_contacts(\"홍\")\n","search_contacts(\"김철\")\n","search_contacts(\"이영희\")"],"metadata":{"id":"vJT31IYRxnIM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["address_book = [\n","    {'name': '홍길동', 'phone': '010-1234-5678', 'email': 'hong@example.com'},\n","    {'name': '김철수', 'phone': '010-2345-6789', 'email': ''}\n","]\n","def delete_contact(name: str) -> None:\n","    \"\"\"이름에 해당하는 연락처 정보를 주소록에서 삭제합니다.\"\"\"\n","    global address_book\n","    original_count = len(address_book)\n","    address_book = [c for c in address_book if c['name'].lower() != name.lower()]\n","    if len(address_book) < original_count:\n","        print(f\"\\n🗑️ '{name}' 연락처가 삭제되었습니다.\")\n","    else:\n","        print(f\"\\n⚠️ '{name}'에 해당하는 연락처를 찾을 수 없습니다.\")\n","    print(\"--- 현재 주소록 ---\")\n","    for contact in address_book:\n","        print(f\"이름: {contact['name']}, 전화번호: {contact['phone']}\")\n","    print(\"-------------------\")\n","print(\"--- 삭제 전 주소록 ---\")\n","for contact in address_book:\n","    print(f\"이름: {contact['name']}, 전화번호: {contact['phone']}\")\n","print(\"-------------------\")\n","delete_contact(\"홍길동\")\n","delete_contact(\"이영희\")"],"metadata":{"id":"keReae7nxnFZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["address_book = [\n","    {'name': '홍길동', 'phone': '010-1234-5678', 'email': 'hong@example.com'},\n","    {'name': '박찬호', 'phone': '010-9999-8888', 'email': 'park@mlb.com'},\n","    {'name': '김철수', 'phone': '010-2345-6789', 'email': ''}\n","]\n","def sort_contacts() -> None:\n","    address_book.sort(key=lambda x: x['name'])\n","    print(\"\\n✅ 연락처가 이름순으로 정렬되었습니다.\")\n","print(\"--- 정렬 전 ---\")\n","for c in address_book: print(c['name'])\n","sort_contacts()\n","print(\"\\n--- 정렬 후 ---\")\n","for c in address_book: print(c['name'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"htfVg5u0xnCR","executionInfo":{"status":"ok","timestamp":1756370894044,"user_tz":-540,"elapsed":35,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"7e9f61cf-e385-48e5-e957-fa7447893545"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["--- 정렬 전 ---\n","홍길동\n","박찬호\n","김철수\n","\n","✅ 연락처가 이름순으로 정렬되었습니다.\n","\n","--- 정렬 후 ---\n","김철수\n","박찬호\n","홍길동\n"]}]},{"cell_type":"code","source":["address_book = [\n","    {'name': '홍길동', 'phone': '010-1234-5678', 'email': 'hong@example.com'},\n","    {'name': '김철수', 'phone': '010-2345-6789', 'email': ''}\n","]\n","def contact_generator():\n","    \"\"\"주소록에 저장된 연락처를 순회하는 제너레이터 함수\"\"\"\n","    print(\"\\n--- 제너레이터 순회 시작 ---\")\n","    for contact in address_book:\n","        yield contact\n","contacts_gen = contact_generator()\n","for contact in contacts_gen:\n","    print(f\"Yield된 연락처: {contact}\")"],"metadata":{"id":"g0_nNI3txm_Q"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["address_book = []\n","def add_contact(name: str, phone: str, email: str = '') -> None:\n","    contact = {'name': name, 'phone': phone, 'email': email}\n","    address_book.append(contact)\n","    print(f\"✅ 연락처가 추가되었습니다: {contact}\")\n","def view_contacts() -> None:\n","    print(\"\\n--- 전체 연락처 목록 ---\")\n","    if not address_book:\n","        print(\"주소록이 비어있습니다.\")\n","    else:\n","        for c in address_book:\n","            print(f\"이름: {c['name']}, 전화번호: {c['phone']}, 이메일: {c['email']}\")\n","    print(\"----------------------\")\n","def search_contacts(keyword: str) -> None:\n","    print(f\"\\n--- '{keyword}' 검색 결과 ---\")\n","    found = [c for c in address_book if keyword.lower() in c['name'].lower()]\n","    if not found:\n","        print(\"검색된 연락처가 없습니다.\")\n","    else:\n","        for c in found:\n","            print(f\"이름: {c['name']}, 전화번호: {c['phone']}, 이메일: {c['email']}\")\n","    print(\"-------------------------\")\n","def delete_contact(name: str) -> None:\n","    global address_book\n","    original_len = len(address_book)\n","    address_book = [c for c in address_book if c['name'].lower() != name.lower()]\n","    if len(address_book) < original_len:\n","        print(f\"🗑️ '{name}' 연락처가 삭제되었습니다.\")\n","    else:\n","        print(f\"⚠️ '{name}'에 해당하는 연락처를 찾을 수 없습니다.\")\n","def sort_contacts() -> None:\n","    address_book.sort(key=lambda x: x['name'])\n","    print(\"\\n✅ 연락처가 이름순으로 정렬되었습니다.\")\n","def main():\n","    \"\"\"프로그램의 주요 로직을 실행합니다.\"\"\"\n","    while True:\n","        print(\"\\n<연락처 관리 시스템>\")\n","        print(\"1: 추가 | 2: 목록 보기 | 3: 검색 | 4: 삭제 | 5: 정렬 | 6: 종료\")\n","        mode = input(\"원하는 기능의 번호를 입력하세요: \")\n","        if mode == '1':\n","            name = input(\"이름: \")\n","            phone = input(\"전화번호: \")\n","            email = input(\"이메일 (선택사항): \")\n","            add_contact(name, phone, email)\n","        elif mode == '2':\n","            view_contacts()\n","        elif mode == '3':\n","            keyword = input(\"검색할 이름 키워드: \")\n","            search_contacts(keyword)\n","        elif mode == '4':\n","            name = input(\"삭제할 이름: \")\n","            delete_contact(name)\n","        elif mode == '5':\n","            sort_contacts()\n","        elif mode == '6':\n","            print(\"프로그램을 종료합니다.\")\n","            break\n","        else:\n","            print(\"잘못된 입력입니다. 1에서 6 사이의 숫자를 입력해주세요.\")\n","if __name__ == \"__main__\":\n","    main()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-43AV-CHxm80","executionInfo":{"status":"ok","timestamp":1756371062014,"user_tz":-540,"elapsed":4755,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"6fb0b330-ed69-455f-fe0c-fcfdc389c52f"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","<연락처 관리 시스템>\n","1: 추가 | 2: 목록 보기 | 3: 검색 | 4: 삭제 | 5: 정렬 | 6: 종료\n","원하는 기능의 번호를 입력하세요: 6\n","프로그램을 종료합니다.\n"]}]},{"cell_type":"code","source":["try:\n","    num1 = float(input(\"첫 번째 숫자를 입력하세요: \"))\n","    num2 = float(input(\"두 번째 숫자를 입력하세요: \"))\n","    result = num1 / num2\n","    print(f\"나눗셈 결과: {result}\")\n","except ValueError:\n","    print(\"오류: 잘못된 값입니다. 숫자를 입력해주세요.\")\n","except ZeroDivisionError:\n","    print(\"오류: 0으로 나눌 수 없습니다.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qIVBzTLixm5b","executionInfo":{"status":"ok","timestamp":1756442557397,"user_tz":-540,"elapsed":23303,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"fdcad6c2-d9aa-4412-fcd9-086e76136ef9"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["첫 번째 숫자를 입력하세요: 9\n","두 번째 숫자를 입력하세요: 10\n","나눗셈 결과: 0.9\n"]}]},{"cell_type":"code","source":["try:\n","    with open('nonexistent_file.txt', 'r') as f:\n","        content = f.read()\n","        print(content)\n","except FileNotFoundError:\n","    print(\"파일을 찾을 수 없습니다.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"S8fXZPJGxmkq","executionInfo":{"status":"ok","timestamp":1756442593671,"user_tz":-540,"elapsed":3,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"727329cf-a070-4375-a8ad-365537c8b61a"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["파일을 찾을 수 없습니다.\n"]}]},{"cell_type":"code","source":["numbers = []\n","print(\"숫자를 입력하세요. 입력을 마치려면 '중지'을 입력하세요.\")\n","while True:\n","    user_input = input(\"숫자 입력: \")\n","    if user_input.lower() == '중지11\n","    ':\n","        break\n","    try:\n","        numbers.append(int(user_input))\n","    except ValueError:\n","        print(f\"잘못된 값: {user_input}. 숫자를 입력해주세요.\")\n","print(\"\\n입력된 숫자 리스트:\", numbers)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JDHa0pE1Iffa","executionInfo":{"status":"ok","timestamp":1756442635107,"user_tz":-540,"elapsed":12645,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"96cb2960-f03b-482a-ad1a-8ae14c36729b"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["숫자를 입력하세요. 입력을 마치려면 '중지'을 입력하세요.\n","숫자 입력: 1\n","숫자 입력: 1\n","숫자 입력: 1\n","숫자 입력: \n","숫자 입력: 1\n","잘못된 값: . 숫자를 입력해주세요.\n","숫자 입력: 1\n","숫자 입력: 1\n","숫자 입력: 1\n","숫자 입력: 중지\n","\n","입력된 숫자 리스트: [1, 1, 1, 1, 1, 1, 1]\n"]}]},{"cell_type":"code","source":["class NegativeNumberError(Exception):\n","    pass\n","try:\n","    num = int(input(\"양수를 입력하세요: \"))\n","    if num < 0:\n","        raise NegativeNumberError()\n","    print(f\"입력한 양수는 {num}입니다.\")\n","except NegativeNumberError:\n","    print(\"양수를 입력해주세요.\")\n","except ValueError:\n","    print(\"숫자를 입력해야 합니다.\")"],"metadata":{"id":"vE4X8xVaJBLF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import datetime\n","now = datetime.datetime.now()\n","print(f\"현재 날짜와 시간: {now}\")\n","birth_year = int(input(\"\\n태어난 년도를 입력하세요: \"))\n","current_year = now.year\n","age = current_year - birth_year\n","print(f\"당신의 나이는 약 {age}세입니다.\")"],"metadata":{"id":"oN6xawynJEMI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import requests\n","url = 'https://kream.co.kr/'\n","try:\n","    response = requests.get(url)\n","    print(f\"상태 코드: {response.status_code}\")\n","    print(\"\\nHTML 첫 100자:\")\n","    print(response.text[:100])\n","except requests.exceptions.RequestException as e:\n","    print(f\"웹 페이지를 가져오는 중 오류가 발생했습니다: {e}\")"],"metadata":{"id":"t_EeaLKPJECc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import time\n","def timer_decorator(func):\n","    def wrapper(*args, **kwargs):\n","        start_time = time.time()\n","        result = func(*args, **kwargs)\n","        end_time = time.time()\n","        execution_time = end_time - start_time\n","        print(f\"'{func.__name__}' 함수 실행 시간: {execution_time:.2f}초\")\n","        return result\n","    return wrapper\n","@timer_decorator\n","def example_function():\n","    print(\"함수가 실행됩니다.\")\n","    time.sleep(1.5)\n","    print(\"함수 실행이 완료되었습니다.\")\n","example_function()"],"metadata":{"id":"7VsstTByJNgN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["%%writefile mymath.py\n","def triangle_area(base, height):\n","    return 0.5 * base * height\n","def circle_area(radius):\n","    PI = 3.14159\n","    return PI * (radius ** 2)\n","def cuboid_volume(width, length, height):\n","    return width * length * height"],"metadata":{"id":"Fgx8bgUvJNdp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import mymath\n","tri_area = mymath.triangle_area(10, 5)\n","cir_area = mymath.circle_area(7)\n","cub_vol = mymath.cuboid_volume(3, 4, 5)\n","print(f\"밑변 10, 높이 5인 삼각형의 넓이: {tri_area}\")\n","print(f\"반지름 7인 원의 넓이: {cir_area}\")\n","print(f\"가로 3, 세로 4, 높이 5인 직육면체의 부피: {cub_vol}\")"],"metadata":{"id":"DE4A-3_RJNa4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["!mkdir animals"],"metadata":{"id":"fuXWifD4JNVk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["%%writefile animals/__init__.py"],"metadata":{"id":"Nho5dx4hJNKG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["%%writefile animals/mammals.py\n","class Dog:\n","    def __init__(self, name):\n","        self.name = name\n","    def speak(self):\n","        return f\"{self.name} says Woof!\""],"metadata":{"id":"u-XaN3KpJcoK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["%%writefile animals/birds.py\n","class Eagle:\n","    def __init__(self, name):\n","        self.name = name\n","    def fly(self):\n","        return f\"{self.name} is flying high!\""],"metadata":{"id":"IoquqWLIJcey"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from animals.mammals import Dog\n","from animals.birds import Eagle\n","my_dog = Dog(\"해피\")\n","my_eagle = Eagle(\"이글이\")\n","print(my_dog.speak())\n","print(my_eagle.fly())"],"metadata":{"id":"mqME1CeoJcW3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import random\n","def initialize_game(n):\n","    treasure_position = (random.randint(0, n - 1), random.randint(0, n - 1))\n","    player_position = (random.randint(0, n - 1), random.randint(0, n - 1))\n","    while treasure_position == player_position:\n","        player_position = (random.randint(0, n - 1), random.randint(0, n - 1))\n","    return treasure_position, player_position\n","def calculate_distance(treasure_position, player_position):\n","    return abs(treasure_position[0] - player_position[0]) + abs(treasure_position[1] - player_position[1])\n","def move_player(board_size, player_position, direction):\n","    x, y = player_position\n","    if direction == 'w': y += 1\n","    elif direction == 's': y -= 1\n","    elif direction == 'a': x += 1\n","    elif direction == 'd': x -= 1\n","    if 0 <= x < board_size and 0 <= y < board_size:\n","        return (x, y)\n","    else:\n","        print(\">> 맵의 경계를 벗어날 수 없습니다! <<\")\n","        return player_position\n","def play_game(board_size):\n","    treasure_position, player_position = initialize_game(board_size)\n","    moves = 0\n","    print(\"=\"*20)\n","    print(\"      보물 찾기 게임\")\n","    print(\"=\"*20)\n","    print(f\"{board_size}x{board_size} 맵에서 보물을 찾으세요!\")\n","    print(\"이동 방향: w(앞), S(뒤), a(좌), d(우)\")\n","    while True:\n","        moves += 1\n","        distance = calculate_distance(treasure_position, player_position)\n","        print(f\"\\n--- [시도 {moves}] ---\")\n","        print(f\"현재 위치: {player_position}\")\n","        print(f\"힌트: 보물까지의 거리는 약 {distance} 입니다.\")\n","        direction = input(\"이동할 방향을 입력하세요: \").lower()\n","        if direction not in ['w', 's', 'a', 'd']:\n","            print(\">> 잘못된 방향입니다. w, s, a, d 중 하나를 입력하세요. <<\")\n","            continue\n","        player_position = move_player(board_size, player_position, direction)\n","        if player_position == treasure_position:\n","            print(\"\\n========================================\")\n","            print(f\"🎉 축하합니다! {moves}번 만에 보물을 찾았습니다! 🎉\")\n","            print(f\"보물의 위치는 {treasure_position} 였습니다.\")\n","            print(\"========================================\")\n","            break\n","if __name__ == \"__main__\":\n","    board_size = 15\n","    play_game(board_size)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Kl_IV53GJcRQ","executionInfo":{"status":"ok","timestamp":1756445707128,"user_tz":-540,"elapsed":37013,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"959f001a-1d75-4486-a0bc-99f9be1162ad"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["====================\n","      보물 찾기 게임\n","====================\n","15x15 맵에서 보물을 찾으세요!\n","이동 방향: w(앞), S(뒤), a(좌), d(우)\n","\n","--- [시도 1] ---\n","현재 위치: (14, 1)\n","힌트: 보물까지의 거리는 약 11 입니다.\n","이동할 방향을 입력하세요: d\n","\n","--- [시도 2] ---\n","현재 위치: (13, 1)\n","힌트: 보물까지의 거리는 약 10 입니다.\n","이동할 방향을 입력하세요: d\n","\n","--- [시도 3] ---\n","현재 위치: (12, 1)\n","힌트: 보물까지의 거리는 약 9 입니다.\n","이동할 방향을 입력하세요: d\n","\n","--- [시도 4] ---\n","현재 위치: (11, 1)\n","힌트: 보물까지의 거리는 약 10 입니다.\n","이동할 방향을 입력하세요: a\n","\n","--- [시도 5] ---\n","현재 위치: (12, 1)\n","힌트: 보물까지의 거리는 약 9 입니다.\n","이동할 방향을 입력하세요: w\n","\n","--- [시도 6] ---\n","현재 위치: (12, 2)\n","힌트: 보물까지의 거리는 약 8 입니다.\n","이동할 방향을 입력하세요: w\n","\n","--- [시도 7] ---\n","현재 위치: (12, 3)\n","힌트: 보물까지의 거리는 약 7 입니다.\n","이동할 방향을 입력하세요: w\n","\n","--- [시도 8] ---\n","현재 위치: (12, 4)\n","힌트: 보물까지의 거리는 약 6 입니다.\n","이동할 방향을 입력하세요: w\n","\n","--- [시도 9] ---\n","현재 위치: (12, 5)\n","힌트: 보물까지의 거리는 약 5 입니다.\n","이동할 방향을 입력하세요: w\n","\n","--- [시도 10] ---\n","현재 위치: (12, 6)\n","힌트: 보물까지의 거리는 약 4 입니다.\n","이동할 방향을 입력하세요: w\n","\n","--- [시도 11] ---\n","현재 위치: (12, 7)\n","힌트: 보물까지의 거리는 약 3 입니다.\n","이동할 방향을 입력하세요: w\n","\n","--- [시도 12] ---\n","현재 위치: (12, 8)\n","힌트: 보물까지의 거리는 약 2 입니다.\n","이동할 방향을 입력하세요: w\n","\n","--- [시도 13] ---\n","현재 위치: (12, 9)\n","힌트: 보물까지의 거리는 약 1 입니다.\n","이동할 방향을 입력하세요: w\n","\n","========================================\n","🎉 축하합니다! 13번 만에 보물을 찾았습니다! 🎉\n","보물의 위치는 (12, 10) 였습니다.\n","========================================\n"]}]},{"cell_type":"code","source":["import random\n","import os\n","def clear_screen():\n","    os.system('cls' if os.name == 'nt' else 'clear')\n","def initialize_game(n):\n","    treasure_position = (random.randint(0, n - 1), random.randint(0, n - 1))\n","    player_position = (random.randint(0, n - 1), random.randint(0, n - 1))\n","    while treasure_position == player_position:\n","        player_position = (random.randint(0, n - 1), random.randint(0, n - 1))\n","    return treasure_position, player_position\n","def display_board(board_size, player_position, found=False, treasure_position=None):\n","    print(\"\\n--- 지도 ---\")\n","    for y in range(board_size - 1, -1, -1):\n","        row_str = \"\"\n","        for x in range(board_size):\n","            current_pos = (x, y)\n","            if current_pos == player_position:\n","                row_str += \" 🧍 \"\n","            elif found and current_pos == treasure_position:\n","                row_str += \" 💎 \"\n","            else:\n","                row_str += \" ⬜️ \"\n","        print(row_str)\n","    print(\"------------\")\n","def calculate_distance(treasure_position, player_position):\n","    return abs(treasure_position[0] - player_position[0]) + abs(treasure_position[1] - player_position[1])\n","def move_player(board_size, player_position, direction):\n","    x, y = player_position\n","    if direction == 'W':\n","        y += 1\n","    elif direction == 'S':\n","        y -= 1\n","    elif direction == 'D':\n","        x += 1\n","    elif direction == 'A':\n","        x -= 1\n","    if 0 <= x < board_size and 0 <= y < board_size:\n","        return (x, y)\n","    else:\n","        print(\"\\n>> 맵의 경계를 벗어날 수 없습니다! <<\")\n","        return player_position\n","def play_game(board_size):\n","    treasure_position, player_position = initialize_game(board_size)\n","    moves = 0\n","    while True:\n","        clear_screen()\n","        print(\"=\"*25)\n","        print(\"      보물 찾기 게임 💎\")\n","        print(\"=\"*25)\n","        display_board(board_size, player_position)\n","        moves += 1\n","        distance = calculate_distance(treasure_position, player_position)\n","        print(f\"\\n--- [시도 {moves}] ---\")\n","        print(f\"현재 위치: {player_position}\")\n","        print(f\"힌트: 보물까지의 거리는 약 {distance} 입니다.\")\n","        print(\"이동 방향: w(앞), s(뒤), a(좌), d(우)\")\n","        direction = input(\"이동할 방향을 입력하세요: \").upper()\n","        if direction not in ['W', 'S', 'A', 'D']:\n","            input(\"\\n>> 잘못된 방향입니다. Enter를 눌러 계속하세요. <<\")\n","            continue\n","        player_position = move_player(board_size, player_position, direction)\n","        if player_position == treasure_position:\n","            clear_screen()\n","            print(\"\\n========================================\")\n","            print(f\"🎉 축하합니다! {moves}번 만에 보물을 찾았습니다! 🎉\")\n","            print(f\"보물의 위치는 {treasure_position} 였습니다.\")\n","            display_board(board_size, player_position, found=True, treasure_position=treasure_position)\n","            print(\"========================================\")\n","            break\n","if __name__ == \"__main__\":\n","    board_size = 15\n","    play_game(board_size)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rmWrvt_6JcGw","executionInfo":{"status":"ok","timestamp":1756445987638,"user_tz":-540,"elapsed":49858,"user":{"displayName":"이이현직","userId":"10231870271723839000"}},"outputId":"b6314eac-7513-41a3-aedd-deb7096626c4"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["=========================\n","      보물 찾기 게임 💎\n","=========================\n","\n","--- 지도 ---\n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  🧍  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n","------------\n","\n","--- [시도 1] ---\n","현재 위치: (5, 7)\n","힌트: 보물까지의 거리는 약 6 입니다.\n","이동 방향: w(앞), s(뒤), a(좌), d(우)\n","이동할 방향을 입력하세요: ㅈ\n","\n",">> 잘못된 방향입니다. Enter를 눌러 계속하세요. <<w\n","=========================\n","      보물 찾기 게임 💎\n","=========================\n","\n","--- 지도 ---\n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  🧍  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n","------------\n","\n","--- [시도 2] ---\n","현재 위치: (5, 7)\n","힌트: 보물까지의 거리는 약 6 입니다.\n","이동 방향: w(앞), s(뒤), a(좌), d(우)\n","이동할 방향을 입력하세요: w\n","=========================\n","      보물 찾기 게임 💎\n","=========================\n","\n","--- 지도 ---\n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  🧍  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n","------------\n","\n","--- [시도 3] ---\n","현재 위치: (5, 8)\n","힌트: 보물까지의 거리는 약 5 입니다.\n","이동 방향: w(앞), s(뒤), a(좌), d(우)\n","이동할 방향을 입력하세요: w\n","=========================\n","      보물 찾기 게임 💎\n","=========================\n","\n","--- 지도 ---\n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  🧍  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n","------------\n","\n","--- [시도 4] ---\n","현재 위치: (5, 9)\n","힌트: 보물까지의 거리는 약 4 입니다.\n","이동 방향: w(앞), s(뒤), a(좌), d(우)\n","이동할 방향을 입력하세요: w\n","=========================\n","      보물 찾기 게임 💎\n","=========================\n","\n","--- 지도 ---\n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  🧍  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n","------------\n","\n","--- [시도 5] ---\n","현재 위치: (5, 10)\n","힌트: 보물까지의 거리는 약 3 입니다.\n","이동 방향: w(앞), s(뒤), a(좌), d(우)\n","이동할 방향을 입력하세요: w\n","=========================\n","      보물 찾기 게임 💎\n","=========================\n","\n","--- 지도 ---\n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  🧍  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n","------------\n","\n","--- [시도 6] ---\n","현재 위치: (5, 11)\n","힌트: 보물까지의 거리는 약 2 입니다.\n","이동 방향: w(앞), s(뒤), a(좌), d(우)\n","이동할 방향을 입력하세요: w\n","=========================\n","      보물 찾기 게임 💎\n","=========================\n","\n","--- 지도 ---\n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  🧍  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n","------------\n","\n","--- [시도 7] ---\n","현재 위치: (5, 12)\n","힌트: 보물까지의 거리는 약 1 입니다.\n","이동 방향: w(앞), s(뒤), a(좌), d(우)\n","이동할 방향을 입력하세요: w\n","\n","========================================\n","🎉 축하합니다! 7번 만에 보물을 찾았습니다! 🎉\n","보물의 위치는 (5, 13) 였습니다.\n","\n","--- 지도 ---\n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  🧍  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n"," ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️  ⬜️ \n","------------\n","========================================\n"]}]}]}